# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, ml):
        self.ml = ml

    def __str__(self):
        for row in self.ml:
            for i in row:
                print(f"{i:4}", end="")
            print()
        return ''

    def __str__(self):
        return str('\n'.join(['\t'.join([str(el) for el in i]) for i in self.ml]))

    def __add__(self, other):
        for i in range(len(self.ml)):
            for i_2 in range(len(other.ml[i])):
                self.ml[i][i_2] = self.ml[i][i_2] + other.ml[i][i_2]
        return Matrix.__str__(self)


m = Matrix([[1,1,1], [2,2,2], [3,3,3], [4,4,4]])
new_m = Matrix([[-1,0,0], [-2, 0, 0], [-3, 0, 0], [-4, 0, 0]])
print(m.__add__(new_m))